var cliApps = {};

function ApigeeCli() {
  var theCli = this;
  this.apps = {};
  this.doCommand = function(rawCommand) {
    var commandObject = buildCommand(rawCommand || "");
    if (commandObject.hasOwnProperty('noun') && commandObject.hasOwnProperty('verb')) {
      if (theCli.apps.hasOwnProperty(commandObject.noun) && (theCli.apps[commandObject.noun].hasOwnProperty(commandObject.verb) && theCli.apps[commandObject.noun].hasOwnProperty('api'))) {
        theCli.apps[commandObject.noun][commandObject.verb](commandObject.params);     
      } else if (commandObject.noun === 'create') {
        var appName = commandObject.verb;
        if (!(theCli.apps[appName])) theCli.apps[appName] = new ApigeeApp(appName,commandObject.params); //possible to pass in username, password here and have that respected
      } else {
        console.log('Could not build request');
      }
    } else {
      console.log('Command was not formed properly');
    }
  }
  var buildCommand = function(rawCommand) {
    var trimmedCommand = $.trim(rawCommand.replace(/\s+/gi,' '));
    var extraVerbiage = {
      " app " : " ",
      " add provider " : " add_provider ",
      " add user " : " add_user ",
      " to smartkey " : " ",
      " authorization for smartkey " : " ",
      " access " : " "
    };
    for (var beforeString in extraVerbiage) {
      if (extraVerbiage.hasOwnProperty(beforeString)) {
        trimmedCommand = trimmedCommand.replace(new RegExp(beforeString,'gi'),extraVerbiage[beforeString]);
      }
    }
    var commandArray = trimmedCommand.split(" ");
    var cleanCommand = {};
    if (commandArray.length > 1) {
      cleanCommand = {
        "noun" : commandArray.shift(),
        "verb" : commandArray.shift()
      };
      cleanCommand.params = (commandArray.length > 0) ? commandArray : null;
    }
    return cleanCommand;
  }  
}

function ApigeeApp(appName,requestParams) {
  var theApp = this;
  this.providers = {};
  this.users = {};
  this.preparams = {};
  this.create = function(appName) {
    if (appName) {
      var newRequest = theApp.api.request('post','apps',{'appName':appName,'displayName':appName,'version':'0'});
      newRequest.responseMessage = 'App endpoint: '+theApp.api.defaults.endpoint+'<br /><strong>[app '+appName+' created]</strong>';
      showResponseMessage(newRequest.responseMessage);
    }
  }
  this.configure = function(requestParams) {
    if ($.isArray(requestParams)) {
      if (theApp.providers.hasOwnProperty(requestParams[0]) && (requestParams.length === 3)) {
        var providerName = requestParams[0];
        var newParams = {'consumerkey':requestParams[1],'consumersecret':requestParams[2]};
        $.extend(theApp.providers[providerName].preparams, newParams);
        var newRequest = theApp.api.request('post','apps/'+theApp.appName+'/providers/'+providerName,newParams,{'callback':'cliApps['+theApp.appName+'].configure'}); 
        newRequest.responseMessage = providerName+' Consumer Key and Secret added to '+theApp.appName+'.  Users can now be authenticated with '+providerName+'.<br /><strong>['+providerName+' is now configured]</strong>';
        showResponseMessage(newRequest.responseMessage);
      }
    } else if (requestParams.hasOwnProperty(providername) && theApp.providers.hasOwnProperty(requestParams.providername)) {
      theApp.providers[requestParams.providername].configure(requestParams);
    }
  }
  this.add_provider = function(requestParams) {
    if ($.isArray(requestParams)) {
      var providername = requestParams[0];
      if (!(theApp.providers.hasOwnProperty(providername))) {
        theApp.providers[providername] = new ApigeeProvider(providername);   
        showResponseMessage(providername+' uses OAuth 1.0a. You will need the Consumer Key and Consumer Secret that '+providername+' provides for your app.<br /><strong>['+providername+' added to '+theApp.appName+']</strong>');   
      }
    }
  }
  this.add_user = function(requestParams) {
    if ($.isArray(requestParams)) {
      var username = requestParams[0];
      var password = requestParams[1];
      if (!(theApp.users.hasOwnProperty(username))) {
        var newRequest = theApp.api.request('post','apps/'+theApp.appName+'/users',{'username':username,'password':password},{'callback':'cliApps['+theApp.appName+'].add_user'});
        newRequest.responseMessage = 'Username and password exchanged for an Apigee SmartKey.  The SmartKey for '+username+' is 220961tty9089.  You\'ll use this SmartKey to authorize all API calls on behalf of this user.  Keep this secret safe!<br /><strong>[user '+username+' added to '+theApp.appName+']</strong>';
        showResponseMessage(newRequest.responseMessage);
      }
    } else if (requestParams.hasOwnProperty('username') && (requestParams.hasOwnProperty('userid') && requestParams.hasOwnProperty('smartkey'))) {
      theApp.users[requestParams.username] = new ApigeeUser(requestParams.username, requestParams.userid, requestParams.smartkey);
    }
  }
  this.add = function(requestParams) {
    if ($.isArray(requestParams)) {
      if (theApp.providers.hasOwnProperty(requestParams[0]) && (requestParams.length === 4)) {
        var newRequest = theApp.api.request('post','smartkeys/'+requestParams[3]+'/providers/'+requestParams[0],{"oauth_token":requestParams[1],"oauth_token_secret":requestParams[2]});
        newRequest.responseMessage = requestParams[0]+' Access Key and Secret added to the SmartKey.  You can now make authenticated requests to the '+requestParams[0]+' API with this SmartKey.<br /><strong>[smartkey '+requestParams[3]+' is authorized with '+requestParams[0]+']</strong>';
        showResponseMessage(newRequest.responseMessage);
      }
    }
  }
  this.get = function(requestParams) {
    if ($.isArray(requestParams)) {
      if (theApp.providers.hasOwnProperty(requestParams[0]) && (requestParams.length === 2)) {
        var newRequest = theApp.api.request('get','smartkeys/'+requestParams[1]+'/providers/'+requestParams[0],{'hidekeys':'false'}); 
        newRequest.responseMessage = 'The authorization url is <a href="https://api.twitter.com/oauth/authorize?taoethth">https://api.twitter.com/oauth/authorize?taoethth</a>.  Sign in with '+requestParams[0]+' and make '+theApp.appName+' a trusted application.';
        showResponseMessage(newRequest.responseMessage);
      } else {
        var newRequest = theApp.api.request('get',requestParams[0]);
        newRequest.responseMessage = '';
        showResponseMessage(newRequest.responseMessage);
      }
    } else if (requestParams.hasOwnProperty('authurl') && requestParams.hasOwnProperty('authorization')) {
      //pop a new window with authurl so that we can do the dance; example response headers are:
      /* {“authurl”:”http://api.twitter.com/oauth/request_token”,”authorization”:{"oauth_nonce":"QP70eNmVz8jvdPevU3oJD2AfF7R7odC2XJcn4XlZJqk","oauth_callback":"https%3A%2F%2Fapigee.com%2F%cli%2Fdance?3A3005%2Fthe_dance%2Fprocess_callback%3Fservice_provider_id%3D11","oauth_signature_method":"HMAC-SHA1","oauth_timestamp":"1272323042","oauth_consumer_key":"GDdmIQH6jhtmLUypg82g","oauth_signature":"8wUi7m5HFQy76nowoCThusfgB%2BQ%3D","oauth_version":"1.0"}} */
    }
  }
  this.init = function(appName,requestParams) {
    //var endPoint = 'https://'+appName+'-api.apigee.com';
    //var endPoint = 'http://fountainhead.apigee.com';
    var endPoint = 'https://api.apigee.com/v1/';
    var appParams = (requestParams == null) ? endPoint : [endPoint].concat(requestParams).join(',');
    theApp.api = (requestParams === null) ? new $.apigee_api(endPoint) : new $.apigee_api(endPoint,requestParams[0],requestParams[1])
    theApp.appName = appName;
    cliApps[appName] = theApp;
    theApp.create(appName);
  }
  if (appName) this.init(appName,requestParams);
}

function ApigeeProvider(providername) {
  var theProvider = this;
  this.preparams = {};
  this.configure = function(responseObject) {
    if (theProvider.preparams.hasOwnProperty('consumerkey') && theProvider.preparams.hasOwnProperty('consumersecret')) {
      theProvider.consumerkey = theProvider.preparams.consumerkey;
      theProvider.consumersecret = theProvider.preparams.consumersecret;
      theProvider.preparams = {};
    }
  }
  this.init = function(providername) {
    theProvider.providername = providername;
  }
  if (providername) this.init(providername);
}

function ApigeeUser(username,userid,smartkey) {
  var theUser = this;
  this.preparams = {};
  this.init = function(username,userid,smartkey) {
    theUser.username = username;
    theUser.userid = userid;
    theUser.smartkey = smartkey;
  }
  if (username && (userid && smartkey)) this.init(username,userid,smartkey);
}

function showResponseMessage(responseMessage) {
  console.log(responseMessage);
}

/*
TRANSLATION MAPPING
create app favewits - create APPNAME
favewits configure twitter 89aoi8a9a98 aio89ai8ad89a092 - APPNAME configure providername CONSUMERKEY CONSUMERSECRET
favewits add provider twitter - APPNAME add_provider providername
favewits add user marsh@earth2marsh.com supersecret0 - APPNAME add_user username PASSWORD
favewits add twitter access 53745772890 53tn5hd369iue to smartkey 220961tty9089 - APPNAME add providername ACCESSKEY SECRET SMARTKEY
favewits get twitter authorization for smartkey 220961tty9089 - APPNAME get providername SMARTKEY
favewits get /twitter/1/statuses/home_timeline.json?smartkey=220961tty9089 - APPNAME get URL
*/